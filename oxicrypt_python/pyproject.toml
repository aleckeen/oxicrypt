[build-system]
requires = ["maturin>=0.14,<0.15"]
build-backend = "maturin"

[project]
name = "oxicrypt"
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]

[tool.maturin]
bindings = "pyo3"
strip = true

[tool.mypy]
files = ["oxicrypt"]
namespace_packages = true
show_error_codes = true
strict = true
enable_error_code = [
  "redundant-expr",
  "truthy-bool",
  "ignore-without-code",
]
disable_error_code = [
  "empty-body",
]

[[tool.mypy.overrides]]
module = [
  "oxicrypt.oxicrypt"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["oxicrypt.*"]
# We exclude the oxicrypt module from warn_return_any, because the PyO3 api does
# not have Python type annotations. See https://github.com/PyO3/pyo3/issues/1112
# for a discussion on adding this capability. We could add a stub file for
# oxicrypt.oxicrypt (the PyO3 api), but that amounts to duplicating almost all
# type annotations on our api, as the Python api itself is a thin wrapper around
# the PyO3 api to start with.
warn_return_any = false

[tool.black]
line-length = 88
target-version = ["py310"]
include = ".pyi?$"
